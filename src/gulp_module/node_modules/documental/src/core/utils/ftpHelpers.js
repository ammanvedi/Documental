
( function( Utils, State, Config, vftp, fs ) {


	Utils.ftp = {};

	Utils.ftp.initiate = function( files ) {

		var requiredProps = [ "server", "location", "username", "password" ];

		if( Config.ftp && !Utils.general.checkProperties( Config.ftp, requiredProps ) ) {

			Utils.logStage( "Getting FTP INFO" );

			if( Config.ftpAuto || Config.ftpCLI ) {
				Utils.ftp.upload( files );
			}

		} else {
			Utils.logError( " FTP info specified is invalid" );
		}
	};

	Utils.ftp.upload = function( files ) {

		Utils.logStage( "Uploading to FTP Location.." );

		var conn = new vftp( {
			host: Config.ftp.server,
			user: Config.ftp.username,
			password: Config.ftp.password,
			parallel: 10,
			log: console.log

		} );

		fs.src( files.slice( 0, 4 ), { buffer: false } ).pipe( conn.dest( Config.ftp.location ) );
		fs.src( files.slice( 3, 4 ), { buffer: false } ).pipe( conn.dest( Config.ftp.htmlLocation ) );

	}

} )( documentalCore.utils, documentalCore.state, config, vftp, vfs );